// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id String @id @default(uuid())
  nome String
  cnpj String @unique
  email String @unique
  senha String
  endereco String?
  telefone String?
  token_vinculo String @unique
  funcionarios Funcionario[] 
  produtos Produto[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Funcionario {
  id String @id @default(uuid())
  nome String
  email String @unique
  senha String
  role String @default("funcionario")
  empresa_id String
  empresa Empresa @relation(fields: [empresa_id], references: [id])
  movimentacoes Movimentacao[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Produto {
  id Int @id @default(autoincrement())
  nome String
  descricao String?
  preco_custo Float
  preco_venda Float
  quantidade Int
  estoque_minimo Int
  empresa_id String
  empresa Empresa @relation(fields: [empresa_id], references: [id])
  movimentacoes Movimentacao[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Movimentacao {
  id Int @id @default(autoincrement())
  tipo String
  quantidade Int
  produto_id Int
  produto Produto @relation(fields: [produto_id], references: [id])
  funcionario_id String
  funcionario Funcionario @relation(fields: [funcionario_id], references: [id])
  data DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}